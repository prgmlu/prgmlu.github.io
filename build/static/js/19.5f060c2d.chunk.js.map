{"version":3,"sources":["routes/posts/2020-01-07-linux/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_cfe_Desktop_prgmlu_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"oSAGaA,EAAc,CAACC,KAAO,aAAaC,QAAU,KAAMC,KAAO,kBAAkBC,MAAQ,KAS3FC,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,2FADR,2FAGAL,OAAAE,EAAA,EAAAF,CAAA,0IACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,gBACbC,gBAAiB,OACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,8cAGhBX,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,8BAAH,KACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,gBACbC,gBAAiB,OACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,0DAGhBX,OAAAE,EAAA,EAAAF,CAAA,2BACAA,OAAAE,EAAA,EAAAF,CAAA,WACAA,OAAAE,EAAA,EAAAF,CAAA,WACAA,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,iEACHN,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,KAAf,8GACHN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,gBACbC,gBAAiB,OACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,8DAUpBf,EAAWgB,gBAAiB,EACrB,IAAMC,EAAkB,WAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAmB,CAChD,CACET,GAAI,0FACJY,MAAO,EACPC,MAAO,0FACPC,SAAU,MAMDC,EAAc","file":"static/js/19.5f060c2d.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.695,\"time\":41699.99999999999,\"words\":139}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"how-to-copy-all-thee-files-and-folders-from-a-directory-to-another-from-the-linux-shell\"\n    }}>{`How to copy all thee files and folders from a directory to another from the linux shell`}</h2>\n    <p>{`First letâ€™s create a 2 directories, each with files and directories inside them with the following set of bash commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\",\n        \"data-language\": \"bash\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token function\\\">mkdir</span> dir1\\n<span class=\\\"token function\\\">mkdir</span> dir2\\n<span class=\\\"token comment\\\">#creating files inside each dir</span>\\n<span class=\\\"token function\\\">touch</span> dir1/y\\n<span class=\\\"token function\\\">touch</span> dir2/y\\n<span class=\\\"token comment\\\">#creating directories inside each dir</span>\\n<span class=\\\"token function\\\">mkdir</span> dir1/child_dir\\n<span class=\\\"token function\\\">mkdir</span> dir2/child_dir\\n\"\n        }\n      }}></code></pre>\n    <p><strong parentName=\"p\">{`Trying the straightforward`}</strong>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\",\n        \"data-language\": \"bash\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token function\\\">cp</span> dir1 dir2\\n\"\n        }\n      }}></code></pre>\n    <p>{`will not work.`}</p>\n    <hr></hr>\n    <br />\n    <p><strong parentName=\"p\">{`what you need to use is the flag -r which means recursively.`}</strong></p>\n    <p><em parentName=\"p\">{`to to copy all thee files and folders from a directory to another from the linux shell use the following:`}</em></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\",\n        \"data-language\": \"bash\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token function\\\">cp</span> -r dir1 dir2\\n\"\n        }\n      }}></code></pre>\n    {\n      /***To learn how to build your own JAMStack app**, join the [React In Practice](https://frontarm.com/courses/react-in-practice/) course by [James K Nelson](https://twitter.com/james_k_nelson), where you'll build this blog from scratch.*/\n    }\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"how-to-copy-all-thee-files-and-folders-from-a-directory-to-another-from-the-linux-shell\",\n    level: 2,\n    title: \"How to copy all thee files and folders from a directory to another from the linux shell\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}