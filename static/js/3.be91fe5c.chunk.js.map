{"version":3,"sources":["components/TagIndexPage.module.css","components/TagPage.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/TagIndexPage.js","components/TagPage.js","routes/tags.js"],"names":["module","exports","TagIndexPage","TagPage","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","props","react_default","a","createElement","className","styles","tags","map","tag","key","href","dist_es","name","count","_ref","blogRoot","routes","route","url","ArticleSummary","crawlRoutes","root","paths","regenerator_default","async","_context","prev","next","cache","awrap","crawl","context","crawlingRoutes","sent","resolve","method","urls","abrupt","stop","tagRoutes","compose","withContext","req","objectSpread2","tagsRoot","mountpath","withCrawlerPatterns","/:tag","_context2","t0","getAvailableTagsFromRoutes","t1","t2","mount","/","title","getView","_context3","fromPairs","toLowerCase","forEach","data","push","components_TagIndexPage","join","getTitle","params","lowerCaseTag","_context4","find","metaTag","components_TagPage","_ref2","Set","concat","apply"],"mappings":"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","file":"static/js/3.be91fe5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TagIndexPage\":\"TagIndexPage_TagIndexPage__1KLH1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TagPage\":\"TagPage_TagPage__2Zrai\"};","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React from 'react'\nimport { Link } from 'react-navi'\nimport styles from './TagIndexPage.module.css'\n\nfunction TagIndexPage(props) {\n  return (\n    <div className={styles.TagIndexPage}>\n      <h1>Tags</h1>\n      <ul>\n        {props.tags.map(tag =>\n          <li key={tag.href}>\n            <Link href={tag.href}>{tag.name} ({tag.count})</Link>\n          </li>  \n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default TagIndexPage","import React from 'react'\nimport ArticleSummary from './ArticleSummary'\nimport styles from './TagPage.module.css'\n\nfunction TagPage({ blogRoot, name, routes }) {\n  return (\n    <div className={styles.TagPage}>\n      <h1>{name} posts</h1>\n      <ul>\n        {routes.map(route =>\n          <li key={route.url.href}>\n            <ArticleSummary blogRoot={blogRoot} route={route} />\n          </li>  \n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default TagPage","import React from 'react'\nimport { compose, crawl, mount, resolve, route, withContext, withCrawlerPatterns } from 'navi'\nimport { join } from 'path'\nimport { fromPairs } from 'lodash'\nimport TagIndexPage from '../components/TagIndexPage'\nimport TagPage from '../components/TagPage'\nimport routes from './index'\n\nasync function crawlRoutes(root) {\n  if (!crawlRoutes.cache[root]) {\n    let { paths } = await crawl({\n      context: {\n        crawlingRoutes: true,\n      },\n      root,\n      routes,\n    })\n    crawlRoutes.cache[root] = await resolve({\n      method: 'HEAD',\n      routes,\n      urls: paths,\n    }) \n  }\n  return crawlRoutes.cache[root]\n}\ncrawlRoutes.cache = {}\n\nconst tagRoutes = compose(\n  withContext((req, context) => ({\n    ...context,\n    tagsRoot: req.mountpath,\n  })),\n  withCrawlerPatterns({\n    '/:tag': async (req, context) => {\n      if (!context.crawlingRoutes) {\n        return getAvailableTagsFromRoutes(\n          await crawlRoutes(context.blogRoot)\n        ).map(tag => '/'+tag)\n      }\n      return []\n    }\n  }),\n  mount({\n    '/': route({\n      title: 'Tags',\n\n      getView: async (req, context) => {\n        // Build a list of pages for each tag\n        let routes = await crawlRoutes(context.blogRoot)\n        let tags = getAvailableTagsFromRoutes(routes)\n        let tagRoutes = fromPairs(tags.map(name => [name.toLowerCase(), []]))\n        routes.forEach(route => {\n          let data = route.data\n          if (data && data.tags) {\n            data.tags.forEach(tag => {\n              tag = tag.toLowerCase()\n              if (tagRoutes[tag]) {\n                tagRoutes[tag].push(route)\n              }\n            })\n          }\n        })\n\n        return (\n          <TagIndexPage\n            blogRoot={context.blogRoot}\n            tags={tags.map(name => ({\n              name,\n              href: join(req.mountpath, name.toLowerCase()),\n              count: (tagRoutes[name] || []).length,\n            }))}\n          />\n        )\n      },\n    }),\n\n    '/:tag': route({\n      getTitle: req => req.params.tag,\n      getView: async (req, context) => {\n        let lowerCaseTag = req.params.tag.toLowerCase()\n        let routes = await crawlRoutes(context.blogRoot)\n\n        // Build a list of pages that include the tag from the site map\n        let tagRoutes = []\n        routes.forEach(route => {\n          let tags = (route.data && route.data.tags) || []\n          if (tags.find(metaTag => metaTag.toLowerCase() === lowerCaseTag)) {\n            tagRoutes.push(route)\n          }\n        })\n\n        return (\n          <TagPage\n            blogRoot={context.blogRoot}\n            name={req.params.tag}\n            routes={tagRoutes}\n          />\n        )\n      },\n    }),\n  }),\n)\n\nfunction getAvailableTagsFromRoutes(routes) {\n  return Array.from(\n    new Set(\n      [].concat(...routes.map(route => (route.data && route.data.tags) || [])),\n    ),\n  )\n}\n\nexport default tagRoutes\n"],"sourceRoot":""}